Git:Sistema de control distribuido
    trabaja con un repositorio y controla versiones
    Cordina a desarrolladores en un mismo proyecto
    Registro de todo lo que se escrito(se puede ver todo desde el inicio)
    Puede trabajar con repositorios local o remoto


Conceptops basicos:
                    track de la historia del codigo
                    snapshots de nuestros archivos (poder ver el codigo antiguo en cualquier momento)
                    decido cuando hacer los cambio 


bash es como una cosola pero con muchas otra funcionalidades

estados:
        Working directory --> donde estoy trabajando con mis archivos
        staging area --> agregando archivos para el guardado
        repository --. donde luego ya de tener mis archivos listos subirlos


commando basicos:
                 git init  --> decirle que vamos a hacer un proyecto nuevo (decir que voy a utilizar git) una vez al comensar
                 git add <file> --> pasar los archivos de working.. a stating area
                                    gits add .   --> agrega al staging are  todos los archivos
                 git status --> para ver en que estado estado
                                status 
                                        A: esta en el staging area
                                        M: Hice unos cambios y todavia no se ha subido.. HAY QUE ADD de nuevo para hacer otro commit


                 git commit   --> pasar de stating are al repository
                                  git commit -m "descripcion"
                                  git commit -am "descripcion"   -->para add y comit todos los archivos
                
                git log --oneline : para saber todos los commit que se hizo




    
                git reset --hard 092codigoCopia719  --> hacer una restauracion del archivo


                 git push ---> subirlo a un repositorio remoto y que pueda ser adccdido por los dev
                               Podemos ver el push que nos da al inciar un repositorio
                               
                 git pull --> traer cambios que han hecho los otros dev
                 git clone --> copia de los archivos del repositorio
                 
         Etiquetas/versiones
                 git tag 15-09-20v1 -m"Version 1 del proyecto" -> Crea etiquetas en local con lel ultimo commit
                            luego 
                 git push --tags   -> para subir las etiquetas


            Editor vim
                git commit  --amend   -> para abrir el editor vin 
                            :i   --> modificar una descripcion de un commit ultimo que hicimos

        RAMAS
                git branch NonbreRama --> para inciar una RAMA
                git branch --> para ver en que rama estamos  * señalada
                git checkout NombreRama  --> para trabajar en una rama

                git branch -d NombreRamaEliminar --> Borrar la Rama 


        Github
                pull-request --> es una peticion de pull para que una persona tenga el acceso de hacer un pull
                Fork: 
                        Ramificacion de proyecto y colaboradores
                        es como una rama de todo el proyecto de alguien mas
                        Al hacer un fork es hacer una copia identica del repositorio de alguien mas a nuestro propio nuestro 

                                Ventajas:
                                        poner tener una base de todo un proyecto para el nuestro
                                        Poder colaborar --> poder hacer un commit y continuar con el proyecto 
                                                                luego puedo hacer un PULL REQUEST para que el programador 
                                                                original pueda ver nuestro codigo y si quiere puede añadir al proyecto original

                                aprender fork con visualstudio si quiero hacer colaboraciones



